/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import Modelo.*;
import static interfaces.Menu.*;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


 




/**
 *
 * @author gadv1
 */
public class AgregarIngrediente extends javax.swing.JPanel {

    /**
     * Creates new form menuAgregarProducto
     */
    public AgregarIngrediente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        botonSalir = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        comboTipo = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        comboUnidad = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        panelRound1 = new Modelo.PanelRound();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(920, 529));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(247, 126, 33));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Registrar ingredientes");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 80));

        botonSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-return-24.png"))); // NOI18N
        botonSalir.setText(" Regresar");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 403, 150, 50));

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-upload-24.png"))); // NOI18N
        btnRegistrar.setText(" Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 403, 150, 50));

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNombre.setBorder(null);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 190, 30));

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aceite", "Carne", "Condimento", "Gaseosa", "Harina y derivado", "Lacteo", "Legumbre" }));
        comboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoActionPerformed(evt);
            }
        });
        add(comboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 140, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Tipo de producto:");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        comboUnidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "L" }));
        comboUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboUnidadActionPerformed(evt);
            }
        });
        add(comboUnidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 70, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("Unidad:");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("Nombre del producto:");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        panelRound1.setBackground(new java.awt.Color(247, 126, 33));
        panelRound1.setRoundBottomLeft(30);
        panelRound1.setRoundBottomRight(30);
        panelRound1.setRoundTopLeft(30);
        panelRound1.setRoundTopRight(30);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Unidad", "Cantidad", "Fecha"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        panelRound1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 490, 240));

        add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 98, 510, 261));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 197, 10));

        jPanel1.setBackground(new java.awt.Color(214, 28, 78));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 488, 920, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void comboUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboUnidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboUnidadActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        GestionInventario m = new GestionInventario();
        m.setSize(920,529);
        m.setLocation(0,0);
        
        this.removeAll();
        this.add(m,new org.netbeans.lib.awtextra.AbsoluteConstraints(0,0,-1,-1));
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (txtNombre.getText().isEmpty()){    //Guarda los ingredientes en el xml y llena la tabla de ingredientes ingresados
         JOptionPane.showMessageDialog(null, "Por favor no deje espacios vacios.");
        } else {
            switch(comboTipo.getSelectedItem().toString()){
              case "Aceite":
              Aceites a = new Aceites(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
                if(!aXML.verificarAceite(txtNombre.getText())){
                    if (aXML.agregarAceite(a)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Aceite",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
              case"Carne":
              Carne c = new Carne(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
              if(!cXML.verificarCarne(txtNombre.getText())){
                    if (cXML.agregarCarne(c)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Carne",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
              case"Condimento":
              Condimento co = new Condimento(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
              if(!coXML.verificarCondimento(txtNombre.getText())){
                    if (coXML.agregarCondimento(co)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Condimento",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
              case"Gaseosa":
              Gaseosa g = new Gaseosa(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
              if(!gXML.verificarGaseosa(txtNombre.getText())){
                    if (gXML.agregarGaseosa(g)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Gaseosa",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
              case"Harina y derivado":
              HarinayDerivado h = new HarinayDerivado(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
              System.out.println("---");
              if(!hXML.verificarHarina(txtNombre.getText())){
                System.out.println("paso");
                    if (hXML.agregarHarina(h)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Harina y derivado",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
              case"Lacteo":
              Lacteo l = new Lacteo(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
              if(!lcXML.verificarLacteo(txtNombre.getText())){
                    if (lcXML.agregarLacteo(l)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Lacteo",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
              case"Legumbre":
              Legumbre le = new Legumbre(0,0,0,0,txtNombre.getText(),comboUnidad.getSelectedItem().toString());
              if(!leXML.verificarLegumbre(txtNombre.getText())){
                    if (leXML.agregarLegumbre(le)){
                      mostrarMensajeExito(); 
                      llenarTabla(txtNombre.getText(),"Legumbre",comboUnidad.getSelectedItem().toString());
                    }
                    else{
                      mostrarMensajeFallo();  
                    }
                }
                else{
                 mostrarMensajeRepetido();
                }
              break;
            } 
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        String s1 = String.valueOf(evt.getKeyChar());//No permite que entre valores que no sean letras o espacios
        if(!(s1.matches("[a-zA-Z ]"))){
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void comboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoActionPerformed
         int opcion = comboTipo.getSelectedIndex();//Cambia los contenidos de la combo Box unidad
         switch(opcion){
             case 0:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("L");
             break;
             case 1:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("Kg");
             break;
             case 2:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("Kg");
             break;
             case 3:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("L");
             break;
             case 4:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("Kg");
             break;
             case 5:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("Kg");
                 comboUnidad.addItem("L");
             break;
             case 6:
                 comboUnidad.removeAllItems();
                 comboUnidad.addItem("Kg");
             break;
         }
                 
    }//GEN-LAST:event_comboTipoActionPerformed
    
   void llenarTabla(String nombre,String tipo,String unidad){
       DefaultTableModel model = (DefaultTableModel)tabla.getModel();
       Object[] row;
       row = new Object[5];
       row[0] = nombre; 
       row[1] = tipo;
       row[2] = unidad;
       row[3] = "Por asignar"; 
       row[4] = "Por asignar";
       model.addRow(row);
   }
    
   void mostrarMensajeExito(){
      JOptionPane.showMessageDialog(null, "El producto se agrego con exito");  
   }
    
    void mostrarMensajeRepetido(){
      JOptionPane.showMessageDialog(null, "El producto ya se encuentra registrado");  
   }
   
   void mostrarMensajeFallo(){
        JOptionPane.showMessageDialog(null, "Error al agregar");
   }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JComboBox<String> comboUnidad;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private Modelo.PanelRound panelRound1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
